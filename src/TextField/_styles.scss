
$ease-sharp: map-get($easing, sharp);

// Text field reset
@mixin text-field-reset() {
  appearance: none;
  background-color: transparent;
  border: none;
  box-shadow: none;
  cursor: text;
  display: block;
  margin: 0;
  overflow: hidden;
  padding: 0;

  &:focus {
    outline: none;
  }
}

// Text field color
@mixin text-field-color($color, $type) {
  @if $type == 'underline' {
    background-color: map-get($colors, $color);
  }

  @if $type == 'label' {
    color: map-get($colors, $color);
  }

  @if $type == 'icon' {
    fill: map-get($colors, $color);
  }
}

@if variable-exists(include-components) and index($include-components, 'TextField') {
  .text-field-root {
    position: relative;

    .icon-container {
      align-items: center;
      display: flex;
      justify-content: center;
      left: 0;
      position: absolute;
      top: 0;
      @include size(48px);

      svg {
        @include size(24px);
        fill: $black-2;
      }

      @each $key, $color in $colors {
        @if index($include-text-field-colors, $key)
          or index($include-text-field-colors, 'all') {
          &.icon-color-#{$key}.focused {
            svg {
              @include text-field-color($key, 'icon');
            }
          }
        }
      }
    }

    .text-field-help {
      color: $black-2;
      display: flex;
      @include font-size(12px);

      .limit {
        margin-left: auto;
      }
    }
  }

  .text-field {
    padding-bottom: $base-spacing-unit;
    padding-top: $base-spacing-unit * 4;
    position: relative;

    &.text-field-label-is-fixed {
      padding-top: $base-spacing-unit;
    }

    &.text-field-have-icon {
      margin-left: $base-spacing-unit * 8;
    }

    &.text-field-is-disabled {
      pointer-events: none;

      &::after {
        transform: scale(0) !important;
      }

      &::before {
        background-color: transparent;
        border: 1px dashed $black-4;
      }

      .text-field-input {
        color: $black-3;
      }
    }

    &::before,
    &::after {
      content: '';
    }

    &::before {
      background-color: $black-4;
      bottom: $base-spacing-unit - 1;
      height: 1px;
      left: 0;
      position: absolute;
      right: 0;
    }

    &::after {
      bottom: $base-spacing-unit - 1;
      height: 1px;
      left: 0;
      position: absolute;
      right: 0;
      transform: scale(0);
      transition: transform 0.3s $ease-sharp;
    }

    &.focused {
      &::after {
        transform: scale(1);
      }

      .text-field-label {
        @include font-size(12px);
        transform: translateY(0);
      }

      .text-field-label-fixed.hide-label {
        display: none;
      }
    }

    .text-field-label,
    .text-field-label-fixed {
      @include font-size(16px);
      color: $black-2;
      display: block;
      left: 0;
      line-height: 32px;
      pointer-events: none;
      position: absolute;
      text-transform: capitalize;
      top: $base-spacing-unit;
    }

    .text-field-label {
      transform: translateY($base-spacing-unit * 3);
      transition: all 0.2s $ease-sharp;
    }

    .text-field-input {
      @include text-field-reset();
      @include font-size(16px);
      color: inherit;
      font-weight: 400;
      width: 100%;
    }

    input.text-field-input {
      height: 32px;
    }

    textarea.text-field-input {
      height: 24px;
      margin: 4px 0;
      resize: none;
    }

    &:hover .clear {
      opacity: 1;
    }

    .clear {
      bottom: $base-spacing-unit + 3;
      opacity: 0;
      position: absolute;
      right: 0;
      transition: opacity 0.2s $ease-sharp;

      svg {
        @include size(16px);
        cursor: pointer;
      }

      &:hover {
        svg {
          fill: $red-700;
        }
      }
    }
  }
}

@each $key, $color in $colors {
  @if variable-exists(include-text-field-colors) {
    @if index($include-text-field-colors, $key) or index($include-text-field-colors, 'all') {
      .text-field-color-#{$key} {
        &::after {
          @include text-field-color($key, 'underline');
        }
      }

      .text-field-color-#{$key}.focused .text-field-label,
      .help-message-#{$key},
      .limit-#{$key} {
        @include text-field-color($key, 'label');
      }
    }
  }
}
