// Button vars
$btn-padding: ('xs': 10px, 's': 12px, 'm': 14px, 'l': 16px, 'xl': 26px);
$btn-font-size: ('xs': 11px, 's': 11px, 'm': 13px, 'l': 14px, 'xl': 16px);
$btn-icon-size: ('xs': 13px, 's': 15px, 'm': 20px, 'l': 24px, 'xl': 28px);

// Button mixins
@mixin btn($size, $color, $type, $disabled: null) {
  @include btn-reset;

  @if $disabled {
    @include btn-disabled($type);
  }

  @include btn-size($size, $type);
  @include btn-color($color, $type);
  @include btn-type($type);
}

@mixin btn-reset() {
  backface-visibility: hidden;
  background-color: transparent;
  border: none;
  cursor: pointer;
  display: inline-block;
  font-family: inherit;
  font-weight: 500;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: relative;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  text-align: center;
  text-transform: uppercase;
  vertical-align: top;

  &,
  &:hover,
  &:active,
  &:focus {
    outline: none;
    text-decoration: none;
  }

  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }

  .ripple {
    z-index: -1;
  }
}

@mixin btn-disabled($type) {
  box-shadow: none !important;
  color: $black-3 !important;
  cursor: not-allowed;

  @if $type == 'raised' or $type == 'fab' {
    background-color: $grey-300 !important;
  }

  @if $type == 'flat' or $type == 'icon' {
    background-color: transparent !important;
  }

  .ripple {
    display: none;
  }
}

@mixin btn-size($size, $type: null) {
  line-height: map-get($sizes, $size);
  padding-left: map-get($btn-padding, $size);
  padding-right: map-get($btn-padding, $size);
  @include font-size(map-get($btn-font-size, $size));

  @if $type == 'icon' or $type == 'fab' {
    @include size(map-get($sizes, $size));
    align-items: center;
    display: inline-flex;
    justify-content: center;
    padding: 0;

    svg {
      height: map-get($btn-icon-size, $size);
      width: map-get($btn-icon-size, $size);
    }
  }

  @if $type == 'icon' {
    @include font-size((map-get($btn-icon-size, $size)));
  }

  @if $type == 'fab' {
    @include font-size((map-get($btn-font-size, $size)) + 4);
  }
}

@mixin btn-color($color, $type) {
  @if $type == 'raised' or $type == 'fab' {
    @if $color == 'white' or $color == 'light-blue' or $color == 'cyan' or $color == 'light-green' or $color == 'lime' or $color == 'yellow' or $color == 'amber' or $color == 'orange' or $color == 'grey' {
      color: $black-1;

      svg {
        fill: $black-1;
      }
    } @else {
      color: $white-1;

      svg {
        fill: $white-1;
      }
    }

    background-color: map-get($colors, $color);

    .ripple {
      background-color: darken(map-get($colors, $color), 50%);
    }
  }

  @if $type == 'flat' or $type == 'icon' {
    color: map-get($colors, $color);
    z-index: 0;

    svg {
      fill: map-get($colors, $color);
    }

    .ripple {
      background-color: map-get($colors, $color);
    }

    &:hover {
      background-color: rgba(map-get($colors, $color), 0.15);
    }
  }
}

@mixin btn-type($type) {
  @if $type == 'raised' or $type == 'flat' {
    border-radius: $base-round;
  }

  @if $type == 'raised' or $type == 'fab' {
    transition-duration: 0.2s;
    transition-property: box-shadow;
  }

  @if $type == 'raised' {
    @include z-depth(2);

    &:active {
      @include z-depth(8);
    }
  }

  @if $type == 'fab' {
    @include z-depth(6);

    &:active {
      @include z-depth(12);
    }
  }

  @if $type == 'flat' or $type == 'icon' {
    transition-duration: 0.2s;
    transition-property: background-color;
  }

  @if $type == 'icon' or $type == 'fab' {
    border-radius: 50%;
  }
}

@if variable-exists(include-btns) {
  .btn {
    @include btn-reset;
  }
}

@if variable-exists(include-btns-disabled) {
  @if index($include-btns-disabled, 'raised') {
    .btn-raised[disabled] {
      @include btn-disabled('raised');
    }
  }

  @if index($include-btns-disabled, 'flat') {
    .btn-flat[disabled] {
      @include btn-disabled('flat');
    }
  }

  @if index($include-btns-disabled, 'icon') {
    .btn-icon[disabled] {
      @include btn-disabled('icon');
    }
  }

  @if index($include-btns-disabled, 'fab') {
    .btn-fab[disabled] {
      @include btn-disabled('fab');
    }
  }
}

@if variable-exists(include-btns-types) {
  @if index($include-btns-types, 'raised') {
    .btn-raised {
      @include btn-type('raised');
    }
  }

  @if index($include-btns-types, 'flat') {
    .btn-flat {
      @include btn-type('flat');
    }
  }

  @if index($include-btns-types, 'icon') {
    .btn-icon {
      @include btn-type('icon');
    }
  }

  @if index($include-btns-types, 'fab') {
    .btn-fab {
      @include btn-type('fab');
    }
  }
}

@if variable-exists(include-btns-sizes) {
  @each $key, $size in $sizes {
    @if index($include-btns-sizes, $key) {
      .btn-#{$key} {
        @include btn-size($key);
      }

      .btn-icon.btn-#{$key} {
        @include btn-size($key, 'icon');
      }

      .btn-fab.btn-#{$key} {
        @include btn-size($key, 'fab');
      }
    }
  }
}

@if variable-exists(include-btns-raised-colors) {
  @each $key, $color in $colors {
    @if index($include-btns-raised-colors, $key)
      or index($include-btns-raised-colors, 'all') {
      .btn-raised.btn-#{$key} {
        @include btn-color($key, 'raised');
      }
    }
  }
}

@if variable-exists(include-btns-flat-colors) {
  @each $key, $color in $colors {
    @if index($include-btns-flat-colors, $key)
      or index($include-btns-flat-colors, 'all') {
      .btn-flat.btn-#{$key} {
        @include btn-color($key, 'flat');
      }
    }
  }
}

@if variable-exists(include-btns-icon-colors) {
  @each $key, $color in $colors {
    @if index($include-btns-icon-colors, $key)
      or index($include-btns-icon-colors, 'all') {
      .btn-icon.btn-#{$key} {
        @include btn-color($key, 'icon');
      }
    }
  }
}

@if variable-exists(include-btns-fab-colors) {
  @each $key, $color in $colors {
    @if index($include-btns-fab-colors, $key)
      or index($include-btns-fab-colors, 'all') {
      .btn-fab.btn-#{$key} {
        @include btn-color($key, 'fab');
      }
    }
  }
}
